<controls:MetroWindow x:Class="GSD.Views.MainWindow" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:viewModels="clr-namespace:GSD.ViewModels" xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" xmlns:behaviors="clr-namespace:GSD.Behaviors" xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls" xmlns:behaviours="http://metro.mahapps.com/winfx/xaml/shared" xmlns:views="clr-namespace:GSD.Views"
                      GlowBrush="{DynamicResource AccentColorBrush}"
                      mc:Ignorable="d" xmlns:lex="http://wpflocalizeextension.codeplex.com" lex:ResxLocalizationProvider.DefaultAssembly="GSD"
					  lex:InheritingResxLocalizationProvider.DefaultDictionary="Strings"
                      Title="{Binding ProjectList.CurrentProject.Model.Name, StringFormat=GSD - {0}, FallbackValue=GSD}"
                      Height="600" Width="800">
    <Window.DataContext>
        <viewModels:MainViewModel />
    </Window.DataContext>

    <Window.Resources>
        <views:MainBindingProxy Data="{Binding}" x:Key="MainProxy" />
        <GeometryDrawing x:Key="WindowIcon"
		                 Brush="{StaticResource IdealForegroundColorBrush}"
		                 Geometry="M373.529,81.667C364.437,81.667,355.715,78.069,349.265,71.659L327.5,50 184.5,50 162.733,71.658C156.285,78.069,147.562,81.667,138.47,81.667L79.5,81.667 79.5,462 432.5,462 432.5,81.667 373.529,81.667z M392,421.5L119,421.5 119,121.5 181.333,121.5 206.25,146.5 307.5,146.5 332.75,121.5 392,121.5 392,421.5z M162.874,277.426L179.23,262.305C198.363,271.563 210.496,278.607 232.001,293.936 272.427,248.059 299.14,224.784 348.793,193.891L354.115,206.133C313.168,241.867 283.178,281.668 239.996,359.11 213.361,327.741 195.585,307.746 162.874,277.426z" />
    </Window.Resources>

    <controls:MetroWindow.IconTemplate>
        <DataTemplate>
            <Grid Width="{TemplateBinding Width}"
			      Height="{TemplateBinding Height}"
			      Margin="4" Background="Transparent" RenderOptions.EdgeMode="Aliased" RenderOptions.BitmapScalingMode="HighQuality">
                <Image>
                    <Image.Source>
                        <DrawingImage Drawing="{StaticResource WindowIcon}" />
                    </Image.Source>
                </Image>
            </Grid>
        </DataTemplate>
    </controls:MetroWindow.IconTemplate>

    <controls:MetroWindow.RightWindowCommands>
        <controls:WindowCommands>
            <Button>
                <Rectangle Width="20" Height="20" Fill="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}">
                    <Rectangle.OpacityMask>
                        <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_information_circle}" />
                    </Rectangle.OpacityMask>
                </Rectangle>
            </Button>
        </controls:WindowCommands>
    </controls:MetroWindow.RightWindowCommands>

    <Window.InputBindings>
        <KeyBinding Modifiers="Control" Key="T"
		            Command="{Binding OpenTagManagementCommand}" />
        <KeyBinding Modifiers="Control" Key="N"
		            Command="{Binding AddEntryCommand}" />
        <KeyBinding Modifiers="Control" Key="P"
		            Command="{Binding OpenProjectManagementCommand}" />
    </Window.InputBindings>

    <Window.Icon>
        <DrawingImage Drawing="{StaticResource WindowIcon}" />
    </Window.Icon>

    <i:Interaction.Behaviors>
        <behaviors:DataContextDisposer />
        <behaviours:BorderlessWindowBehavior />
        <behaviours:WindowsSettingBehaviour />
        <behaviours:GlowWindowBehavior />
    </i:Interaction.Behaviors>

    <controls:MetroWindow.Flyouts>
        <controls:FlyoutsControl>
            <controls:Flyout Position="Left" Theme="Adapt" Header="{lex:Loc GSD:Strings:Projects}"
			                 DataContext="{Binding ProjectList}" IsPinned="False"
			                 Width="{Binding ActualWidth, RelativeSource={RelativeSource FindAncestor, AncestorType=controls:MetroWindow}, ConverterParameter=40, Converter={StaticResource RelativeWidthConv}}">
                <i:Interaction.Behaviors>
                    <behaviors:FlyoutOpener Name="ProjectsFlyout" />
                </i:Interaction.Behaviors>
                <controls:Flyout.Resources>
                    <views:ProjectListBindingProxy Data="{Binding}" x:Key="ProjectsProxy" />
                </controls:Flyout.Resources>
                <DockPanel>
                    <DockPanel DockPanel.Dock="Bottom" Margin="5">
                        <Button DockPanel.Dock="Right" Content="{lex:Loc GSD:Strings:Create}" Margin="5,0,0,0"
						        Command="{Binding NewProjectCommand}"
						        Style="{DynamicResource SquareButtonStyle}" />
                        <TextBox controls:TextBoxHelper.Watermark="{lex:Loc GSD:Strings:CreateProject}" VerticalAlignment="Center"
						         Text="{Binding NewProjectName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}">
                            <i:Interaction.Behaviors>
                                <behaviors:EnterCommand Command="{Binding NewProjectCommand}" />
                                <behaviors:CancelCommand Command="{Binding CloseFlyoutCommand}" />
                            </i:Interaction.Behaviors>
                        </TextBox>
                    </DockPanel>

                    <ItemsControl ItemsSource="{Binding Projects}">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate DataType="viewModels:ProjectViewModel">
                                <DockPanel Margin="0,5,0,0">

                                    <Button DockPanel.Dock="Left" Width="32" Height="32" ToolTip="{lex:Loc GSD:Strings:Delete}"
									        Style="{DynamicResource MetroCircleButtonStyle}"
									        Command="{Binding Data.DeleteProjectCommand, Source={StaticResource ProjectsProxy}}"
									        CommandParameter="{Binding}">
                                        <Rectangle Width="12" Height="12"
										           Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}">
                                            <Rectangle.OpacityMask>
                                                <VisualBrush Stretch="Fill" Visual="{DynamicResource appbar_delete}" />
                                            </Rectangle.OpacityMask>
                                        </Rectangle>
                                    </Button>

                                    <RadioButton DockPanel.Dock="Right" ToolTip="{lex:Loc GSD:Strings:ActiveProject}"
									             IsChecked="{Binding IsCurrent, Mode=TwoWay}"
									             GroupName="ProjectSelector" />
                                    <TextBlock Text="{Binding Model.Name}"
									           FontSize="{DynamicResource NormalFontSize}"
									           VerticalAlignment="Center" Margin="5,0" />
                                </DockPanel>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </DockPanel>
            </controls:Flyout>
            <controls:Flyout Position="Left" Header="{lex:Loc GSD:Strings:Tags}" Theme="Adapt"
			                 DataContext="{Binding TagList}" IsPinned="False"
			                 Width="{Binding ActualWidth, RelativeSource={RelativeSource FindAncestor, AncestorType=controls:MetroWindow}, ConverterParameter=40, Converter={StaticResource RelativeWidthConv}}">
                <i:Interaction.Behaviors>
                    <behaviors:FlyoutOpener Name="TagsFlyout" />
                </i:Interaction.Behaviors>
                <controls:Flyout.Resources>
                    <views:TagListBindingProxy Data="{Binding}" x:Key="TagssProxy" />
                </controls:Flyout.Resources>
                <DockPanel>
                    <DockPanel DockPanel.Dock="Bottom" Margin="5">
                        <Button DockPanel.Dock="Right" Content="{lex:Loc GSD:Strings:Create}" Margin="5,0,0,0"
						        Command="{Binding NewTagCommand}"
						        Style="{DynamicResource SquareButtonStyle}" />
                        <ComboBox DockPanel.Dock="Right"
						          ItemsSource="{Binding AvailableColors}"
						          VerticalAlignment="Center" HorizontalContentAlignment="Stretch"
						          SelectedItem="{Binding NewTagColor, Mode=TwoWay}">
                            <ComboBox.ItemTemplate>
                                <DataTemplate DataType="Color">
                                    <Ellipse Width="16" MinHeight="16"
									         Fill="{Binding Converter={StaticResource ColorToBrushConv}}" />
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                        <TextBox controls:TextBoxHelper.Watermark="{lex:Loc GSD:Strings:AddTag}" VerticalAlignment="Center"
						         Text="{Binding NewTagName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}">
                            <i:Interaction.Behaviors>
                                <behaviors:CancelCommand Command="{Binding CloseFlyoutCommand}" />
                            </i:Interaction.Behaviors>
                        </TextBox>
                    </DockPanel>

                    <ItemsControl ItemsSource="{Binding Tags}">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate DataType="viewModels:TagViewModel">
                                <DockPanel>
                                    <Button DockPanel.Dock="Left" Width="32" Height="32" ToolTip="{lex:Loc GSD:Strings:Delete}"
									        Style="{DynamicResource MetroCircleButtonStyle}"
									        Command="{Binding Data.DeleteTagCommand, Source={StaticResource TagssProxy}}"
									        CommandParameter="{Binding}">
                                        <Rectangle Width="12" Height="12"
										           Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}">
                                            <Rectangle.OpacityMask>
                                                <VisualBrush Stretch="Fill" Visual="{DynamicResource appbar_delete}" />
                                            </Rectangle.OpacityMask>
                                        </Rectangle>
                                    </Button>

                                    <Ellipse DockPanel.Dock="Right" VerticalAlignment="Center" Margin="5,0" Height="24" Width="24"
									         Stroke="{DynamicResource IdealForegroundColorBrush}"
									         Fill="{Binding Model.Color, Converter={StaticResource BackgroundColorConv}}" />

                                    <TextBlock Text="{Binding Model.Name}"
									           FontSize="{DynamicResource NormalFontSize}"
									           VerticalAlignment="Center" Margin="5,0" />
                                </DockPanel>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </DockPanel>
            </controls:Flyout>
            <controls:Flyout Position="Left" Header="{lex:Loc GSD:Strings:Settings}" Theme="Adapt" IsPinned="False"
			                 Width="{Binding ActualWidth, RelativeSource={RelativeSource FindAncestor, AncestorType=controls:MetroWindow}, ConverterParameter=40, Converter={StaticResource RelativeWidthConv}}">
                <i:Interaction.Behaviors>
                    <behaviors:FlyoutOpener Name="SettingsFlyout" />
                </i:Interaction.Behaviors>
                <controls:Flyout.DataContext>
                    <viewModels:SettingsViewModel />
                </controls:Flyout.DataContext>
                <DockPanel>
                    <DockPanel LastChildFill="False" DockPanel.Dock="Bottom" Margin="5">
                        <Button Content="{lex:Loc GSD:Strings:Save}"
						        Command="{Binding SaveCommand}"
						        Style="{DynamicResource SquareButtonStyle}"
						        Margin="5,0" DockPanel.Dock="Right" />
                        <Button Content="{lex:Loc GSD:Strings:ResetToDefaults}"
						        Command="{Binding ResetToDefaultsCommand}"
						        Style="{DynamicResource SquareButtonStyle}"
						        Margin="5,0" DockPanel.Dock="Left" />
                    </DockPanel>

                    <StackPanel Orientation="Vertical" Margin="5">
                        <StackPanel.Resources>
                            <DataTemplate x:Key="ColorDataTemplate" DataType="{x:Type viewModels:ColorItem}">
                                <DockPanel>
                                    <Ellipse Fill="{Binding ColorBrush}"
									         Stroke="{Binding BorderBrush}"
									         Width="18" Height="18" />
                                    <TextBlock Text="{Binding Name}" Margin="5,0" />
                                </DockPanel>
                            </DataTemplate>
                            <Style TargetType="Separator">
                                <Setter Property="Margin" Value="0,10" />
                                <Setter Property="Foreground" Value="{DynamicResource FlyoutBackgroundBrush}" />
                                <Setter Property="Background" Value="{DynamicResource FlyoutBackgroundBrush}" />
                            </Style>
                        </StackPanel.Resources>

                        <TextBlock Text="{lex:Loc GSD:Strings:Theme}" FontSize="{DynamicResource NormalFontSize}" />
                        <ComboBox ItemsSource="{Binding AvailableThemes}"
						          SelectedItem="{Binding SelectedTheme, Mode=TwoWay}"
						          ItemTemplate="{StaticResource ColorDataTemplate}" />
                        <TextBlock Text="{lex:Loc GSD:Strings:Accent}" FontSize="{DynamicResource NormalFontSize}" />
                        <ComboBox ItemsSource="{Binding AvailableAccents}"
						          SelectedItem="{Binding SelectedAccent, Mode=TwoWay}"
						          ItemTemplate="{StaticResource ColorDataTemplate}" />

                        <Separator />
                        <CheckBox Content="{lex:Loc GSD:Strings:ExpandEntries}" IsChecked="{Binding ExpandEntries, Mode=TwoWay}" />
                    </StackPanel>
                </DockPanel>
            </controls:Flyout>
            <controls:Flyout Position="Left" Header="{lex:Loc GSD:Strings:NewEntry}" Theme="Adapt" IsPinned="False"
			                 Width="{Binding ActualWidth, RelativeSource={RelativeSource FindAncestor, AncestorType=controls:MetroWindow}, ConverterParameter=40, Converter={StaticResource RelativeWidthConv}}">
                <i:Interaction.Behaviors>
                    <behaviors:FlyoutOpener Name="AddEntryFlyout" />
                </i:Interaction.Behaviors>
                <DockPanel d:DataContext="{d:DesignInstance viewModels:AddEntryViewModel}">
                    <DockPanel DockPanel.Dock="Bottom" LastChildFill="False">
                        <Button DockPanel.Dock="Right" Content="{lex:Loc GSD:Strings:Add}" Margin="5"
						        Command="{Binding AddCommand}" />
                        <CheckBox Content="{lex:Loc GSD:Strings:AddAnother}" Margin="5"
						          IsChecked="{Binding StayOpen, Mode=TwoWay}"
						          DockPanel.Dock="Left" />
                    </DockPanel>

                    <Grid Margin="5">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>

                        <TextBlock Text="{lex:Loc GSD:Strings:Summary}" FontSize="{DynamicResource NormalFontSize}" />
                        <TextBox Text="{Binding Summary, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
						         Grid.Row="1" controls:TextBoxHelper.Watermark="{lex:Loc GSD:Strings:EntrySummary}" />
                        <TextBlock Text="{lex:Loc GSD:Strings:Details}" Grid.Row="2"
						           FontSize="{DynamicResource NormalFontSize}" />
                        <TextBox Text="{Binding Details, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
						         AcceptsReturn="True" Grid.Row="3" controls:TextBoxHelper.Watermark="{lex:Loc GSD:Strings:EntryDetails}" />
                        <TextBlock Text="{lex:Loc GSD:Strings:Tags}" Grid.Row="4"
						           FontSize="{DynamicResource NormalFontSize}" />
                        <ItemsControl Grid.Row="5" ItemsSource="{Binding Tags}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate DataType="viewModels:TagEntry">
                                    <CheckBox IsChecked="{Binding IsSelected, Mode=TwoWay}">
                                        <Border BorderBrush="{DynamicResource IdealForegroundColorBrush}"
										        BorderThickness="1" Margin="5,0" Padding="4,2" CornerRadius="5"
										        Background="{Binding Tag.Model.Color, Converter={StaticResource BackgroundColorConv}}">
                                            <TextBlock Text="{Binding Tag.Model.Name}"
											           FontSize="{DynamicResource NormalFontSize}"
											           Foreground="{Binding Tag.Model.Color, Converter={StaticResource ForegroundColorConv}}"
											           VerticalAlignment="Center" />
                                        </Border>
                                    </CheckBox>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </Grid>
                </DockPanel>
            </controls:Flyout>
            <controls:Flyout Position="Right" Header="{lex:Loc GSD:Strings:EditEntry}" Theme="Adapt" IsPinned="False"
			                 Width="{Binding ActualWidth, RelativeSource={RelativeSource FindAncestor, AncestorType=controls:MetroWindow}, ConverterParameter=40, Converter={StaticResource RelativeWidthConv}}">
                <i:Interaction.Behaviors>
                    <behaviors:FlyoutOpener Name="EditEntryFlyout" />
                </i:Interaction.Behaviors>
                <DockPanel d:DataContext="{d:DesignInstance viewModels:EditEntryViewModel}">
                    <DockPanel DockPanel.Dock="Bottom" LastChildFill="False">
                        <Button DockPanel.Dock="Right" Content="{lex:Loc GSD:Strings:Save}" Margin="5"
						        Command="{Binding SaveCommand}" />
                    </DockPanel>

                    <Grid Margin="5">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>

                        <TextBlock Text="{lex:Loc GSD:Strings:Summary}" FontSize="{DynamicResource NormalFontSize}" />
                        <TextBox Text="{Binding Summary, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
						         Grid.Row="1" controls:TextBoxHelper.Watermark="{lex:Loc GSD:Strings:EntrySummary}" />
                        <TextBlock Text="{lex:Loc GSD:Strings:Details}" Grid.Row="2"
						           FontSize="{DynamicResource NormalFontSize}" />
                        <TextBox Text="{Binding Details, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
						         AcceptsReturn="True" Grid.Row="3" controls:TextBoxHelper.Watermark="{lex:Loc GSD:Strings:SummaryDetails}" />
                    </Grid>
                </DockPanel>
            </controls:Flyout>
        </controls:FlyoutsControl>
    </controls:MetroWindow.Flyouts>

    <Grid>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <StackPanel Orientation="Vertical" Grid.Row="0" Margin="5">
                <Button Width="36" Height="36" ToolTip="{lex:Loc GSD:Strings:Settings}"
			        Style="{DynamicResource MetroCircleButtonStyle}"
			        Command="{Binding OpenSettingsCommand}">
                    <Rectangle Width="16" Height="16"
				           Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}">
                        <Rectangle.OpacityMask>
                            <VisualBrush Stretch="Fill" Visual="{DynamicResource appbar_cog}" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                </Button>
                <Button Width="36" Height="36" ToolTip="{lex:Loc GSD:Strings:ManageProjects}"
			        Style="{DynamicResource MetroCircleButtonStyle}"
			        Command="{Binding OpenProjectManagementCommand}">
                    <Rectangle Width="16" Height="16"
				           Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}">
                        <Rectangle.OpacityMask>
                            <VisualBrush Stretch="Fill" Visual="{DynamicResource appbar_checkmark}" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                </Button>
                <Button Width="36" Height="36" ToolTip="{lex:Loc GSD:Strings:ManageTags}"
			        Style="{DynamicResource MetroCircleButtonStyle}"
			        Command="{Binding OpenTagManagementCommand}">
                    <Rectangle Width="16" Height="16"
				           Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}">
                        <Rectangle.OpacityMask>
                            <VisualBrush Stretch="Fill" Visual="{DynamicResource appbar_tag}" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                </Button>
                <Button Width="36" Height="36" ToolTip="{lex:Loc GSD:Strings:AddNewEntry}"
			        Style="{DynamicResource MetroCircleButtonStyle}"
			        Command="{Binding AddEntryCommand}">
                    <Rectangle Width="16" Height="16"
				           Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}">
                        <Rectangle.OpacityMask>
                            <VisualBrush Stretch="Fill" Visual="{DynamicResource appbar_add}" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                </Button>
            </StackPanel>

            <DockPanel Grid.Column="1" Grid.Row="0" Margin="5">
                <TextBox DockPanel.Dock="Top" controls:TextBoxHelper.Watermark="{lex:Loc GSD:Strings:Search}" controls:TextBoxHelper.ClearTextButton="True" Text="{Binding Searcher.Text, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                    <TextBox.ToolTip>
                        <Grid>
                            <Grid.Resources>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Margin" Value="5" />
                                </Style>
                            </Grid.Resources>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="{lex:Loc GSD:Strings:SearchAllEntriesTagged}" Grid.Column="0" Grid.Row="0" />
                            <TextBlock Text="label:abc" FontWeight="Bold" Grid.Column="1" Grid.Row="0" />

                            <TextBlock Text="{lex:Loc GSD:Strings:SearchAllCompletedEntries}" Grid.Row="1" Grid.Column="0" />
                            <TextBlock Text="status:done" FontWeight="Bold" Grid.Column="1" Grid.Row="1" />

                            <TextBlock Text="{lex:Loc GSD:Strings:SearchAllOpenEntries}"  Grid.Row="2" Grid.Column="0" />
                            <TextBlock Text="status:open" FontWeight="Bold" Grid.Column="1" Grid.Row="2" />

                            <TextBlock Text="{lex:Loc GSD:Strings:SearchAllEntriesContaining}"  Grid.Row="3" Grid.Column="0" />
                            <TextBlock Text="details:&quot;test 123&quot;" FontWeight="Bold" Grid.Column="1" Grid.Row="3" />

                            <TextBlock Text="{lex:Loc GSD:Strings:SearchIsDoneUsingAND}" FontStyle="Italic" Grid.ColumnSpan="2" Grid.Column="0" Grid.Row="4" />
                        </Grid>
                    </TextBox.ToolTip>
                </TextBox>

                <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Hidden">
                    <ItemsControl ItemsSource="{Binding Searcher.Matches}">
                        <ItemsControl.Style>
                            <Style TargetType="ItemsControl" BasedOn="{StaticResource {x:Type ItemsControl}}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Searcher.Matches.Count}" Value="0">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate>
                                                    <StackPanel Orientation="Vertical" VerticalAlignment="Center" HorizontalAlignment="Center">
                                                        <TextBlock Text="{lex:Loc SearchDidNotReturnAnyMatches}" FontSize="{StaticResource NormalFontSize}" />
                                                    </StackPanel>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding ProjectList.Projects.Count}" Value="0">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate>
                                                    <StackPanel Orientation="Vertical" VerticalAlignment="Center" HorizontalAlignment="Center">
                                                        <TextBlock Text="{lex:Loc NoProjectsDefined}" FontSize="{StaticResource NormalFontSize}" />
                                                        <Button Content="{lex:Loc CreateProject}" Margin="0,5"
													        Command="{Binding OpenProjectManagementCommand}" />
                                                    </StackPanel>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding ProjectList.CurrentProject.Todos.Count}" Value="0">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate>
                                                    <StackPanel Orientation="Vertical" VerticalAlignment="Center" HorizontalAlignment="Center">
                                                        <TextBlock Text="{lex:Loc NoEntriesDefined}" FontSize="{StaticResource NormalFontSize}" />
                                                        <Button Content="{lex:Loc AddNewEntry}" Margin="0,5"
													        Command="{Binding AddEntryCommand}" />
                                                    </StackPanel>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ItemsControl.Style>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate DataType="viewModels:TodoViewModel">
                                <Expander IsExpanded="{Binding Data.ExpandEntries,Source={StaticResource MainProxy}, Mode=OneTime}">
                                    <Expander.Header>
                                        <DockPanel>
                                            <StackPanel Orientation="Horizontal" DockPanel.Dock="Right" VerticalAlignment="Center">
                                                <ToggleButton Width="32" Height="32"
											              Style="{DynamicResource MetroCircleToggleButtonStyle}"
											              x:Name="btnTags"
											              Foreground="{DynamicResource IdealForegroundColorBrush}">
                                                    <Rectangle Width="12" Height="12"
												           Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ToggleButton}}}">
                                                        <Rectangle.OpacityMask>
                                                            <VisualBrush Stretch="Fill" Visual="{DynamicResource appbar_tag}" />
                                                        </Rectangle.OpacityMask>
                                                    </Rectangle>
                                                </ToggleButton>

                                                <Popup StaysOpen="False"
											       PlacementTarget="{Binding ElementName=btnTags}"
											       Placement="Bottom"
											       IsOpen="{Binding IsChecked, ElementName=btnTags}">
                                                    <Border BorderThickness="1"
												        BorderBrush="{DynamicResource AccentColorBrush}"
												        Background="{DynamicResource ControlBackgroundBrush}">
                                                        <ItemsControl ItemsSource="{Binding AllTags}" Margin="5">
                                                            <ItemsControl.Style>
                                                                <Style TargetType="ItemsControl" BasedOn="{StaticResource {x:Type ItemsControl}}">
                                                                    <Style.Triggers>
                                                                        <DataTrigger Binding="{Binding AllTags.Count}" Value="0">
                                                                            <Setter Property="Template">
                                                                                <Setter.Value>
                                                                                    <ControlTemplate>
                                                                                        <StackPanel Orientation="Vertical" VerticalAlignment="Center" HorizontalAlignment="Center">
                                                                                            <TextBlock Text="{lex:Loc NoTagsDefinedForProject}" FontSize="{StaticResource NormalFontSize}" />
                                                                                            <Button Content="{lex:Loc AddTag}" Margin="0,5"
																						        Command="{Binding Data.OpenTagManagementCommand, Source={StaticResource MainProxy}}" />
                                                                                        </StackPanel>
                                                                                    </ControlTemplate>
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                        </DataTrigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </ItemsControl.Style>
                                                            <ItemsControl.ItemTemplate>
                                                                <DataTemplate DataType="viewModels:TodoTagViewModel">
                                                                    <CheckBox IsChecked="{Binding IsSelected, Mode=TwoWay}">
                                                                        <CheckBox.Content>
                                                                            <Border BorderBrush="{DynamicResource IdealForegroundColorBrush}"
																		        BorderThickness="1" Padding="4,2" CornerRadius="5"
																		        Background="{Binding Model.Color, Converter={StaticResource BackgroundColorConv}}"
																		        VerticalAlignment="Center">
                                                                                <TextBlock Text="{Binding Model.Name}"
																			           FontSize="{DynamicResource NormalFontSize}"
																			           Foreground="{Binding Model.Color, Converter={StaticResource ForegroundColorConv}}"
																			           VerticalAlignment="Center" />
                                                                            </Border>
                                                                        </CheckBox.Content>
                                                                    </CheckBox>
                                                                </DataTemplate>
                                                            </ItemsControl.ItemTemplate>
                                                        </ItemsControl>
                                                    </Border>
                                                </Popup>

                                                <Button Width="32" Height="32" ToolTip="{lex:Loc EditEntry}"
											        Style="{DynamicResource MetroCircleButtonStyle}"
											        Command="{Binding Data.EditEntryCommand, Source={StaticResource MainProxy}}"
											        CommandParameter="{Binding}"
											        VerticalAlignment="Center"
											        Foreground="{DynamicResource IdealForegroundColorBrush}">
                                                    <Rectangle Width="12" Height="12"
												           Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}">
                                                        <Rectangle.OpacityMask>
                                                            <VisualBrush Stretch="Fill" Visual="{DynamicResource appbar_edit}" />
                                                        </Rectangle.OpacityMask>
                                                    </Rectangle>
                                                </Button>
                                                <Button Width="32" Height="32" ToolTip="{lex:Loc DeleteEntry}"
											        Style="{DynamicResource MetroCircleButtonStyle}"
											        Command="{Binding DeleteEntryCommand}"
											        VerticalAlignment="Center"
											        Foreground="{DynamicResource IdealForegroundColorBrush}">
                                                    <Rectangle Width="12" Height="12"
												           Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}">
                                                        <Rectangle.OpacityMask>
                                                            <VisualBrush Stretch="Fill" Visual="{DynamicResource appbar_delete}" />
                                                        </Rectangle.OpacityMask>
                                                    </Rectangle>
                                                </Button>
                                            </StackPanel>

                                            <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                                <CheckBox ToolTip="{lex:Loc Done}"
											          Content="{Binding Model.Summary}"
											          IsChecked="{Binding Model.Done}"
											          Foreground="{DynamicResource IdealForegroundColorBrush}"
											          VerticalAlignment="Center"
											          FontSize="{DynamicResource NormalFontSize}" />

                                                <ItemsControl ItemsSource="{Binding Tags}"
											              Margin="5,0" VerticalAlignment="Center">
                                                    <ItemsControl.ItemsPanel>
                                                        <ItemsPanelTemplate>
                                                            <StackPanel Orientation="Horizontal" />
                                                        </ItemsPanelTemplate>
                                                    </ItemsControl.ItemsPanel>
                                                    <ItemsControl.ItemTemplate>
                                                        <DataTemplate DataType="viewModels:TodoTagViewModel">
                                                            <Border BorderBrush="{DynamicResource IdealForegroundColorBrush}"
														        VerticalAlignment="Center" BorderThickness="1" Margin="5,0" Padding="4,2" CornerRadius="5"
														        Background="{Binding Model.Color, Converter={StaticResource BackgroundColorConv}}">
                                                                <TextBlock Text="{Binding Model.Name}"
															           FontSize="{DynamicResource NormalFontSize}"
															           Foreground="{Binding Model.Color, Converter={StaticResource ForegroundColorConv}}"
															           VerticalAlignment="Center" />
                                                            </Border>
                                                        </DataTemplate>
                                                    </ItemsControl.ItemTemplate>
                                                </ItemsControl>
                                            </StackPanel>
                                        </DockPanel>
                                    </Expander.Header>

                                    <FlowDocumentScrollViewer VerticalScrollBarVisibility="Hidden" HorizontalScrollBarVisibility="Hidden"
								                          Document="{Binding Model.Details, Converter={StaticResource TextToFlowDocumentConv}}" />
                                </Expander>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </ScrollViewer>
            </DockPanel>

            <StatusBar Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="1" Padding="5,0">
                <StatusBar.Style>
                    <Style TargetType="StatusBar" BasedOn="{StaticResource {x:Type StatusBar}}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ProjectList.Projects.Count}" Value="0">
                                <Setter Property="Visibility" Value="Hidden" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ProjectList.CurrentProject.Todos.Count}" Value="0">
                                <Setter Property="Visibility" Value="Hidden" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </StatusBar.Style>
                <StatusBar.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                        </Grid>
                    </ItemsPanelTemplate>
                </StatusBar.ItemsPanel>

                <StatusBarItem Grid.Column="0">
                    <TextBlock Text="{Binding ProjectList.CurrentProject.Model.Name}" Margin="0,0,10,0" />
                </StatusBarItem>
                <StatusBarItem Grid.Column="2">
                    <TextBlock Text="{Binding Searcher.Matches.Count, StringFormat=Search matches: {0}}" Visibility="{Binding Searcher.IsSearching, Converter={StaticResource BoolToVisibleConv}}" />
                </StatusBarItem>
                <StatusBarItem Grid.Column="3">
                    <TextBlock Text="{Binding ProjectList.CurrentProject.OpenTodoCount, StringFormat=Open: {0}}" />
                </StatusBarItem>
                <StatusBarItem Grid.Column="4">
                    <TextBlock Text="{Binding ProjectList.CurrentProject.Todos.Count, StringFormat=Total: {0}}" />
                </StatusBarItem>
                <StatusBarItem Grid.Column="5">
                    <TextBlock Text="{Binding ProjectList.CurrentProject.Progress, StringFormat={}{0}%}" />
                </StatusBarItem>
            </StatusBar>
        </Grid>

        <Grid Visibility="{Binding IsLoading, Converter={StaticResource BoolToVisibleConv}}" Background="{StaticResource SemiTransparentWhiteBrush}">
            <StackPanel Orientation="Vertical" VerticalAlignment="Center" HorizontalAlignment="Center">
                <controls:ProgressRing IsActive="{Binding IsLoading}" IsLarge="True" />
                <TextBlock Text="{lex:Loc PleaseWait}" />
            </StackPanel>
        </Grid>
    </Grid>
</controls:MetroWindow>